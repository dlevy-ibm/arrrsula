# {{ ansible_managed }}

[ml2]
{% set type_drivers = ['local'] %}
{% if neutron.network_vlan_ranges is defined %}
{% set _ = type_drivers.append('vlan') %}
{% endif %}
{% if neutron.enable_flat_networks %}
{% set _ = type_drivers.append('flat') %}
{% endif %}
{% set type_drivers = type_drivers + neutron.tunnel_types %}
type_drivers = {{ type_drivers|join(',') }}

tenant_network_types = {{ neutron.tenant_network_type }}

{% set mechanism_drivers = neutron.mechanism_drivers %}
{% if neutron.l2_population %}
{% set _ = mechanism_drivers.append('l2population') %}
{% endif %}
mechanism_drivers = {{ mechanism_drivers|join(',') }}

{% set extension_drivers = [] %}
{% if neutron.port_security.enabled|bool %}
{% set _ = extension_drivers.append('port_security') %}
{% endif %}
{% if neutron.qos.enabled|bool %}
{% set _ = extension_drivers.append('qos') %}
{% endif %}
extension_drivers = {{ extension_drivers|join(',') }}

{% if neutron.enable_flat_networks %}
[ml2_type_flat]
flat_networks = *
{% endif %}

[ml2_type_vlan]
network_vlan_ranges = {{ neutron.network_vlan_ranges }}

[ml2_type_vxlan]
vni_ranges = {{ neutron.vxlan.vni_ranges }}
vxlan_group = {{ neutron.vxlan.group_prefix }}

[ml2_type_geneve]
vni_ranges = {{ neutron.geneve.vni_ranges }}
# TODO(jckasper): Update max_header_size once https://review.openstack.org/#/c/320121/ is merged
max_header_size = 78

[vxlan]
enable_vxlan = {{ "vxlan" in neutron.tunnel_types }}
l2_population = {{ neutron.l2_population }}

[linux_bridge]
physical_interface_mappings = {{ neutron.bridge_mappings }}

[agent]
{% if neutron.qos.enabled|bool %}
extensions = qos
{% endif %}
tunnel_types = {{ neutron.tunnel_types|join(' ,') }}
root_helper = sudo /usr/local/bin/neutron-rootwrap /etc/neutron/rootwrap.conf

[securitygroup]
enable_security_group = True
{% if 'ovn' not in neutron.mechanism_drivers %}
firewall_driver = neutron.agent.linux.iptables_firewall.IptablesFirewallDriver
{% endif %}

{% if 'ovn' in neutron.mechanism_drivers %}
[ovn]
ovn_l3_mode = True
ovn_nb_connection = tcp:{{ endpoints.ovndb.url }}:{{ endpoints.ovndb.port.northbound }}
ovn_sb_connection = tcp:{{ endpoints.ovndb.url }}:{{ endpoints.ovndb.port.southbound }}
{% endif %}
