# {{ ansible_managed }}

[ml2]
{% set type_drivers = ['local'] %}
{% if neutron.network_vlan_ranges is defined %}
{% set _ = type_drivers.append('vlan') %}
{% endif %}
{% if neutron.vxlan.vni_ranges is defined %}
{% set _ = type_drivers.append('vxlan') %}
{% endif %}
{% if neutron.enable_flat_networks %}
{% set _ = type_drivers.append('flat') %}
{% endif %}
{% set type_drivers = type_drivers + neutron.tunnel_types %}
type_drivers = {{ type_drivers|join(',') }}

tenant_network_types = {{ neutron.tenant_network_type }}

{% if neutron.mech_driver == 'ovn' %}
{% set mechanism_drivers = ['ovn,logger'] %}
{% endif %}
{% if neutron.mech_driver == 'linuxbridge' %}
{% set mechanism_drivers = ['linuxbridge'] %}
{% endif %}
{% if neutron.l2_population %}
{% set _ = mechanism_drivers.append('l2population') %}
{% endif %}
mechanism_drivers = {{ mechanism_drivers|join(',') }}

{% if neutron.enable_flat_networks %}
[ml2_type_flat]
flat_networks = *
{% endif %}

[ml2_type_vlan]
network_vlan_ranges = {{ neutron.network_vlan_ranges }}

[ml2_type_vxlan]
vni_ranges = {{ neutron.vxlan.vni_ranges }}
vxlan_group = {{ neutron.vxlan.group_prefix }}

[ml2_type_geneve]
vni_ranges = {{ neutron.geneve.vni_ranges }}

[vxlan]
enable_vxlan = {{ "vxlan" in neutron.tunnel_types }}
l2_population = {{ neutron.l2_population }}

[linux_bridge]
physical_interface_mappings = {{ neutron.bridge_mappings }}

[agent]
tunnel_types = {{ neutron.tunnel_types|join(' ,') }}
root_helper = sudo /usr/local/bin/neutron-rootwrap /etc/neutron/rootwrap.conf

[securitygroup]
enable_security_group = True
firewall_driver = neutron.agent.linux.iptables_firewall.IptablesFirewallDriver
