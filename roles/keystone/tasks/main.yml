---
- name: check if keystone user exists
  action: shell getent passwd keystone
  register: keystone_user
  failed_when: False
  changed_when: False

- name: keystone user
  user: name=keystone shell=/bin/false createhome=no
  when: keystone_user|success

- name: keystone user
  user: name=keystone comment=keystone shell=/bin/false system=yes
        home=/nonexistent createhome=no
  when: not keystone_user|success

- name: keystone config dir
  file: dest=/etc/keystone state=directory

- name: keystone log dir
  file: dest=/var/log/keystone state=directory mode=2750 owner=keystone
        group=adm

- name: Change keystone log dir acl
  acl: name=/var/log/keystone state=present default=yes etype={{ item.etype }} permissions={{ item.permission }}
  with_items:
    - etype: user
      permission: rw
    - etype: group
      permission: r
    - etype: other
      permission: r

- name: configure keystone
  template: src={{ item }} dest=/etc/keystone/
            mode={{ 0644 if 'policy.json' in item else 0640 }}
            owner=keystone group=keystone
  with_fileglob: ../templates/etc/keystone/*
  register: keystone_templates
  notify:
    - restart keystone services

- name: initialize fernet keys
  command: keystone-manage fernet_setup --keystone-user keystone --keystone-group keystone
  run_once: true
  changed_when: true
  tags: fernet-setup

- include: eventlet.yml
  when: keystone.deploy_method == "eventlet"

- include: no-eventlet.yml
  when: keystone.deploy_method != "eventlet"

- include: uwsgi.yml
  when: keystone.deploy_method == "uwsgi"

- include: no-uwsgi.yml
  when: keystone.deploy_method != "uwsgi"

- name: permit access to keystone
  ufw: rule=allow to_port={{ item }} proto=tcp
  tags: ufw
  with_items:
    - "{{ endpoints.keystone.port.haproxy_api }}"
    - "{{ endpoints.keystone_admin.port.haproxy_api }}"
    - "{{ endpoints.keystone_legacy.port.haproxy_api }}"

- name: delete old token flush job
  file:
    path: /etc/cron.hourly/drop-expired-keystone-tokens
    state: absent

- include: monitoring.yml tags=monitoring,common
  when: monitoring.enabled|default('True')|bool

- include: logging.yml
  tags:
    - logrotate
    - logging
  when: logging.enabled|default('True')|bool
