# {{ ansible_managed }}

[DEFAULT]
# Terminate after detecting deprecated options
fatal_deprecations = {{ heat.enable_fatal_deprecations }}

# Workers
num_engine_workers = {{ heat.engine_workers }}

# Logging
log_dir = /var/log/heat
debug = {{ heat.logging.debug }}

# Internal domain
stack_domain_admin = {{ heat.domain_admin }}
stack_domain_admin_password = {{ secrets.stack_domain_admin_password }}
stack_user_domain_name = {{ heat.stack_user_domain_name }}

# Internal endpoints
heat_metadata_server_url = {{ endpoints.heat_cfn.url.internal }}
heat_waitcondition_server_url = {{ endpoints.heat_cfn.url.internal }}/{{ endpoints.heat_cfn.version }}/waitcondition
instance_connection_is_secure = 1

# Transports
default_software_config_transport = POLL_SERVER_HEAT
default_deployment_signal_transport = HEAT_SIGNAL

# Misc
region_name_for_services = RegionOne
max_nested_stack_depth = 16
#trusts_delegated_roles = {{ heat.stack_owner }}

{% if heat.plugin_dirs|length > 0 -%}
# Plug-ins
plugin_dirs = {{ heat.plugin_dirs|join(', ') }}
{% endif %}

[clients]
ca_file = {{ heat.cafile }}

[clients_keystone]
auth_uri = {{ endpoints.keystone.url.admin }}

[database]
connection = mysql+pymysql://heat:{{ secrets.db_password }}@{{ endpoints.db }}/heat?charset=utf8

[ec2authtoken]
auth_uri = {{ endpoints.keystone.url.internal }}
ca_file = {{ heat.cafile }}

[keystone_authtoken]
auth_uri = {{ endpoints.keystone.url.internal }}
auth_url = {{ endpoints.keystone.url.admin }}
cafile = {{ heat.cafile }}
signing_dir = /var/cache/heat
memcached_servers = {{ hostvars|ursula_memcache_hosts(groups, memcached.port) }}
auth_type = password
project_domain_name = default
project_name = service
user_domain_name = default
username = heat
password = {{ secrets.service_password }}

[heat_api]
bind_host = 0.0.0.0
bind_port = {{ endpoints.heat.port.backend_api }}
ca_file = {{ heat.cafile }}

[heat_api_cfn]
bind_host = 0.0.0.0
bind_port = {{ endpoints.heat_cfn.port.backend_api }}
ca_file = {{ heat.cafile }}

[oslo_messaging_notifications]
{% if ceilometer.enabled|default('False')|bool -%}
driver = messagingv2
{% else -%}
driver = noop
{% endif -%}

[oslo_messaging_rabbit]
{% macro rabbitmq_hosts() -%}
{% for host in groups['controller'] -%}
   {% if loop.last -%}
{{ hostvars[host][hostvars[host]['primary_interface']]['ipv4']['address'] }}:{{ rabbitmq.port }}
   {%- else -%}
{{ hostvars[host][hostvars[host]['primary_interface']]['ipv4']['address'] }}:{{ rabbitmq.port }},
   {%- endif -%}
{% endfor -%}
{% endmacro -%}

heartbeat_timeout_threshold = {{ heat.heartbeat_timeout_threshold }}
{% if rabbitmq.cluster -%}
rabbit_hosts = {{ rabbitmq_hosts() }}
{% else -%}
rabbit_host = {{ endpoints.rabbit }}
{% endif -%}
rabbit_userid = {{ rabbitmq.user }}
rabbit_password = {{ secrets.rabbit_password }}

[trustee]
auth_url = {{ endpoints.keystone.url.admin }}
auth_plugin = password
user_domain_name = default
username = heat
password = {{ secrets.service_password }}

