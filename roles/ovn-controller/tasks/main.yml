- name: install dependencies
  apt: pkg={{ item }} state=latest
  with_items:
    - openvswitch-common
    - openvswitch-datapath-dkms
    - openvswitch-switch
    - ovn-common
    - ovn-host
    - python-openvswitch
  notify:
    - restart openvswitch-switch
    - restart ovn-host

- name: start openvswitch service
  service: name=openvswitch-switch state=started enabled=yes

# Using 'command' instead of the openvswitch_bridge module due to lack of
# support beyond managing bridges. Also using 'changed_when: false' because
# the 'ovs-vsctl set open' command only provides output when it fails.

- name: setup connection to remote database
  command: ovs-vsctl set open . external-ids:ovn-remote=tcp:{{ endpoints.ovndb.url }}:{{ endpoints.ovndb.port.southbound }}
  changed_when: false

- name: add ovs integration bridge
  command: ovs-vsctl --may-exist add-br br-int
  changed_when: false

- name: configure ovs integration bridge
  command: ovs-vsctl set bridge br-int fail-mode=secure other-config:disable-in-band=true
  changed_when: false

- name: enable ovn integration bridge
  command: ovs-vsctl set open . external-ids:ovn-bridge=br-int
  changed_when: false

- name: configure ovn overlay network protocol
  command: ovs-vsctl set open . external-ids:ovn-encap-type={{ item }}
  changed_when: false
  with_items: neutron.tunnel_types

- name: record IP of ovn overlay endpoint in order to detect changes
  copy:
    content={{ hostvars[inventory_hostname][neutron.overlay_interface|default(primary_interface)]['ipv4']['address'] }}
    dest=/var/run/ovn-encap-ip
  notify: restart ovn-host

- name: configure ovn overlay network endpoint
  command: ovs-vsctl set open . external-ids:ovn-encap-ip={{ hostvars[inventory_hostname][neutron.overlay_interface|default(primary_interface)]['ipv4']['address'] }}
  changed_when: false

- name: configure ovn bridge mappings
  command: ovs-vsctl set open . external-ids:ovn-bridge-mappings={{ neutron.bridge_mappings }}

- name: add ovs provider network bridges
  command: ovs-vsctl --may-exist add-br {{item.split(':')[1]}}
  with_items: "{{ neutron.bridge_mappings.split(',') }}"
  notify: ifup provider network bridge
  when: neutron.bridge_mapping is not defined

- name: add ovs provider network bridges
  command: ovs-vsctl --may-exist add-br {{item}}
  with_items: "{{ neutron.bridge_mapping.values() }}"
  notify: ifup provider network bridge with mapping
  when: neutron.bridge_mapping is defined

- name: configure ovs provider network bridges
  command: ovs-vsctl set bridge {{ item.split(':')[1] }} protocols=OpenFlow13
  with_items: "{{ neutron.bridge_mappings.split(',') }}"
  changed_when: false
  when: neutron.bridge_mapping is not defined

- name: configure ovs provider network bridges
  command: ovs-vsctl set bridge {{ item }} protocols=OpenFlow13
  with_items: "{{ neutron.bridge_mapping.values() }}"
  changed_when: false
  when: neutron.bridge_mapping is defined

- name: start ovn controller
  service: name=ovn-host state=started enabled=yes
