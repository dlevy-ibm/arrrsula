---
- name: install neutron-data-network packages
  apt: pkg={{ item }}
  with_items:
    - dnsmasq
    - dnsmasq-utils
    - iputils-arping
    - ucarp
    - radvd
    - resolvconf

- name: install packages for l3ha
  apt: pkg={{ item }}
  with_items:
    - keepalived
    - conntrackd
  when: neutron.l3ha.enabled|bool

- include: dnsmasq.yml

- include: igmp-router.yml
  when: neutron.mech_driver == 'linuxbridge' and 'vxlan' in neutron.tunnel_types and not neutron.l2_population

- name: assert kernel supports vxlan
  command: modinfo -F version vxlan
  changed_when: false
  when: "'vxlan' in neutron.tunnel_types"

- name: assert iproute2 supports vxlan
  command: ip link add type vxlan help
  register: iproute_out
  changed_when: false
  failed_when: iproute_out.rc == 255
  when: "'vxlan' in neutron.tunnel_types"

- name: install neutron dhcp agent upstart script
  upstart_service: name=neutron-dhcp-agent
                   user=neutron
                   cmd=/usr/local/bin/neutron-dhcp-agent
                   pidfile={{ neutron.dhcp.pidfile|default(omit) }}
                   config_dirs=/etc/neutron
                   config_files=/etc/neutron/neutron.conf,{{ neutron.dhcp.agent.config_files }}
                   envs={{ neutron.service.envs }}
  when: neutron.dhcp.enabled|default(true)|bool

- name: install neutron metadata agent upstart script
  upstart_service: name=neutron-metadata-agent
                   user=neutron
                   cmd=/usr/local/bin/neutron-metadata-agent
                   pidfile={{ neutron.metadata.pidfile|default(omit) }}
                   config_dirs=/etc/neutron
                   config_files=/etc/neutron/neutron.conf,{{ neutron.metadata.agent.config_files }}
                   envs={{ neutron.service.envs }}
  when: neutron.metadata.enabled|default(true)|bool

- name: install neutron lbaas agent upstart script
  upstart_service: name=neutron-lbaasv2-agent
                   user=neutron
                   cmd=/usr/local/bin/neutron-lbaasv2-agent
                   pidfile={{ neutron.lbaas.pidfile|default(omit) }}
                   config_dirs=/etc/neutron
                   config_files=/etc/neutron/neutron.conf,{{ neutron.lbaas.agent.config_files }}
                   envs={{ neutron.service.envs }}
  when: (neutron.lbaas.enabled == "smart" and
         groups['controller'][0] not in groups['compute']) or
         neutron.lbaas.enabled|bool

- name: neutron lbaas config
  template:
    src: etc/neutron/neutron_lbaas.conf
    dest: /etc/neutron/neutron_lbaas.conf
    mode: 0644
  when: (neutron.lbaas.enabled == "smart" and
         groups['controller'][0] not in groups['compute']) or
         neutron.lbaas.enabled|bool
  notify: restart neutron lbaas agent

- name: neutron lbaas agent config
  template:
    src: etc/neutron/services/loadbalancer/haproxy/lbaas_agent.ini
    dest: /etc/neutron/services/loadbalancer/haproxy
    mode: 0644
  when: (neutron.lbaas.enabled == "smart" and
         groups['controller'][0] not in groups['compute']) or
         neutron.lbaas.enabled|bool
  notify: restart neutron lbaas agent

- meta: flush_handlers

- name: start neutron dhcp agent
  service: name=neutron-dhcp-agent state=started
  when: neutron.dhcp.enabled|bool

- name: start neutron metadata agent
  service: name=neutron-metadata-agent state=started
  when: neutron.metadata.enabled|bool

- name: start neutron lbaas agent
  service: name=neutron-lbaasv2-agent state=started
  when: (neutron.lbaas.enabled == "smart" and
         groups['controller'][0] not in groups['compute']) or
         neutron.lbaas.enabled|bool

- include: ipchanged.yml

- include: monitoring.yml tags=monitoring,common
  when: monitoring.enabled|default('True')|bool
